version: '3.8'
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: messenger_postgres
    environment:
      POSTGRES_DB: messenger_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka:
    image: bitnami/kafka:latest # Лучше указать конкретную версию, например bitnami/kafka:3.7.0
    container_name: messenger_kafka
    ports:
      - "9092:9092"
      - "9093:9093" # Добавьте, если используете отдельный листенер для контроллера
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 # Используйте localhost или IP хоста
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093 # Используйте имя сервиса 'kafka' внутри compose сети
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  kafka_data:
